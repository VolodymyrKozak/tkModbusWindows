/*
 * tk2_mb_queue.h
 *
 *  Created on: 30 груд. 2019 р.
 *      Author: KozakVF
 */

#ifndef SRC_MB_DEVS_TK2_MB_QUEUE_H_
#define SRC_MB_DEVS_TK2_MB_QUEUE_H_

#include <string.h>
#include <stdint.h>
#include <stdlib.h>
#include <stdbool.h>

void test_queue(void);
/*
Каждый узел однонаправленного (односвязного) линейного списка (ОЛС) содержит одно поле указателя
на следующий узел. Поле указателя последнего узла содержит нулевое значение (указывает на NULL).
Односвязный линейный список
*/
typedef struct{  //описание очереди
    int node_number; //счетчик размера очереди
    void *first; //указатель на начало очереди
    void *last;  //указатель на конец очереди
}queue_t;
/*
Каждый узел однонаправленного (односвязного) линейного списка (ОЛС) содержит одно поле указателя
на следующий узел. Поле указателя последнего узла содержит нулевое значение (указывает на NULL).
Односвязный линейный список
По содержимому узел списка можно обратиться к следующиму элементу, но нельзя обратиться к предыдущему.
Голова списка - узел, адрес которого нужно знать, чтобы не потерять список.
Хвост - узел, который не указывает ни на один другой узел.
*/
/*
Инициализация обработчика очереди списка
Инициализация списка, если пустой
Добавление узла в хвост списка
Добавление узла в голову списка
По мере использования - уничтожение узлов в голове списка

*/

/* Добавление узла в хвост очереди */
int addtail(
		void *p,   /* Ссылка на тело элемента в вызывающей программе
					  для перезаписи его в очередь */
		size_t size,/*Размер тела элемента списка */
		queue_t *pq /*Ссылка на обработчик очереди */
		);
/* Добавление элемента в голову очереди */
void * addhead(
		void *p,	/* Ссылка на тело элемента в вызывающей программе
					  для перезаписи его в очередь */
		size_t size,/*Размер тела элемента списка */
		queue_t *pq /*Ссылка на обработчик очереди */
		);//Возвращаемым значением функции является ccлка на новую голову


/* Удаление головы */
void * deletehead(
		size_t size,/* размер головы */
		queue_t *pq /* Ссылка на обработчик очереди */
		);//Возвращаемым значением функции является ccлка на новую голову


#endif /* SRC_MB_DEVS_TK2_MB_QUEUE_H_ */
